<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title> - Funnycode</title>
        <link>https://blog.funnycode.cn/posts/</link>
        <description> | Funnycode</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>tczjhz@163.com (tiecheng)</managingEditor>
            <webMaster>tczjhz@163.com (tiecheng)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 09 Oct 2020 12:43:45 &#43;0800</lastBuildDate><atom:link href="https://blog.funnycode.cn/posts/" rel="self" type="application/rss+xml" /><item>
    <title>例子</title>
    <link>https://blog.funnycode.cn/posts/sample/</link>
    <pubDate>Fri, 09 Oct 2020 12:43:45 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/sample/</guid>
    <description><![CDATA[我是一个例子 糖炒 红烧]]></description>
</item><item>
    <title>一拳搞定 Hugo | 送它上 GitHub</title>
    <link>https://blog.funnycode.cn/posts/hugo-01/</link>
    <pubDate>Wed, 07 Oct 2020 23:25:25 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/hugo-01/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>领域驱动中Domain_Primitive的简单使用</title>
    <link>https://blog.funnycode.cn/posts/domain-primitive/</link>
    <pubDate>Thu, 28 May 2020 20:13:43 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/domain-primitive/</guid>
    <description><![CDATA[<p>本文介绍一个实际项目中可以使用的概念：Domain Primitive。</p>]]></description>
</item><item>
    <title>模板模式</title>
    <link>https://blog.funnycode.cn/posts/pattern-template/</link>
    <pubDate>Sat, 09 Nov 2019 19:00:33 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/pattern-template/</guid>
    <description><![CDATA[本文介绍在 go 语言中使用模板模式。 一、简介 Template Pattern（模板模式） 白话文： 定一个“抽象类”，定义一个方法A，定义需要子类实现的方法，所有子]]></description>
</item><item>
    <title>装饰者模式</title>
    <link>https://blog.funnycode.cn/posts/pattern-decorator/</link>
    <pubDate>Mon, 04 Nov 2019 17:00:24 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/pattern-decorator/</guid>
    <description><![CDATA[本文介绍在 go 语言中使用装饰者模式。 一、简介 Decorator Pattern（装饰模式） 维基百科 This pattern creates a decorator class which wraps the original class and provides additional functionality keeping class methods signature intact. 白话文： 这个模式我们需]]></description>
</item><item>
    <title>阿里云 RDS 采坑记录</title>
    <link>https://blog.funnycode.cn/posts/aliyun-daily-01/</link>
    <pubDate>Sun, 22 Sep 2019 17:33:11 &#43;0800</pubDate>
    <author></author>
    <guid>https://blog.funnycode.cn/posts/aliyun-daily-01/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/feature.jpg" referrerpolicy="no-referrer">
            </div>一、前言 上周同事负责的同步服务出现宕机后，由于在忙于另一个重要的项目，线上没有及时处理，后发现同步数据丢失。我趁机了解了下我们的同步逻辑并对]]></description>
</item></channel>
</rss>
